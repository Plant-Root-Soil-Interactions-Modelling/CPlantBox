cmake_minimum_required (VERSION 2.8.12)
project (CPlantBox)

# set compiler options
set(RELEASE_WARNING_OPTS "-Wall -Wunused -Wmissing-include-dirs -Wcast-align -Wno-sign-compare  ")
set(DEBUG_WARNING_OPTS "-Wall -Wunused -Wmissing-include-dirs -Wcast-align -Wno-sign-compare ")
set(RELEASE_OPTS "-std=c++17 -fno-strict-aliasing -fstrict-overflow -fno-finite-math-only -O3 -march=native -funroll-loops -g0 ")
set(CMAKE_CXX_FLAGS_RELEASE "${RELEASE_WARNING_OPTS} ${RELEASE_OPTS}")
set(CMAKE_CXX_FLAGS_DEBUG "-std=c++17 -O0 -ggdb -Wall")

# set default build type to release Release
set(CMAKE_BUILD_TYPE Release)

# add source directory to the include path
include_directories(${PROJECT_SOURCE_DIR}/src/structural)
include_directories(${PROJECT_SOURCE_DIR}/src/functional)

include(CMakePackageConfigHelpers)

# get all subfolders of the src directory
file(GLOB ALL_SRC_PATHS
  RELATIVE "${PROJECT_SOURCE_DIR}/src"
  "${PROJECT_SOURCE_DIR}/src/*"
)
set(SOURCE_FOLDERS "")
foreach(path ${ALL_SRC_PATHS})
  if(IS_DIRECTORY "${PROJECT_SOURCE_DIR}/src/${path}")
    message("Found source folder: ${path}")
    list(APPEND SOURCE_FOLDERS "${PROJECT_SOURCE_DIR}/src/${path}")
  endif()
endforeach()

# add ${PROJECT_SOURCE_DIR}/src to the list of source folders
list(APPEND SOURCE_FOLDERS "${PROJECT_SOURCE_DIR}/src")

# make the list into a string with spaces
set(SOURCE_FOLDERS_STRING "")
foreach(folder ${SOURCE_FOLDERS})
  if(NOT folder STREQUAL "${PROJECT_SOURCE_DIR}/src")
    message("Adding source folder: ${folder}")
    # only add folders that are not the src folder itself
    set(SOURCE_FOLDERS_STRING "${SOURCE_FOLDERS_STRING} \"${folder}\"")
  endif()
endforeach()
# remove leading and trailing spaces
string(STRIP "${SOURCE_FOLDERS_STRING}" SOURCE_FOLDERS_STRING)

message("Source folders: ${SOURCE_FOLDERS_STRING}")

# make them into a string of the list
string(REPLACE ";" " " SOURCE_FOLDERS_STRING "${SOURCE_FOLDERS}")

# Set the project version (update as appropriate)
set(PROJECT_VERSION "1.0.0")

set(CONFIG_FILE "${CMAKE_CURRENT_BINARY_DIR}/CPlantBoxConfig.cmake")

file(WRITE "${CONFIG_FILE}" "
# CPlantBoxConfig.cmake - generated by CMake

# Set the root directory of CPlantBox
set(CPlantBox_ROOT_DIR \"${CMAKE_CURRENT_LIST_DIR}\")

# Provide the include directories
set(CPlantBox_INCLUDE_DIRS "${SOURCE_FOLDERS_STRING}")

# Libraries are built in the root folder
set(CPlantBox_LIBRARY_DIR \"${PROJECT_SOURCE_DIR}\")

# Python libraries are also in the root folder
set(CPlantBox_PYTHON_LIBRARY_DIR \"${PROJECT_SOURCE_DIR}\")

# Optionally, provide imported targets if needed
")

write_basic_package_version_file(
  "${CMAKE_CURRENT_BINARY_DIR}/CPlantBoxConfigVersion.cmake"
  VERSION "${PROJECT_VERSION}"
  COMPATIBILITY AnyNewerVersion
)

# add subdirectories
add_subdirectory(src)
#add_subdirectory(tutorial)

# build tutorial (TODO)
# INCLUDE(UseLATEX.cmake)
